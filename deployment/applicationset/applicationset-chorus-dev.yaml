apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: chorus-dev
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - git:
        repoURL: "https://github.com/CHORUS-TRE/environments.git"
        revision: HEAD
        files:
          - path: "chorus-dev/*/config.json"
  strategy:
    type: RollingSync
    rollingSync:
      steps:
        - matchExpressions:
            - key: stepName
              operator: In
              values:
                - infrastructure
        - matchExpressions:
            - key: stepName
              operator: In
              values:
                - database
          maxUpdate: 20% # don't break them all at once.
        - matchExpressions:
            - key: stepName
              operator: In
              values:
                - application
          maxUpdate: 20% # don't break them all at once
  template:
    metadata:
      name: "{{index .path.segments 0}}-{{.path.basename}}"
      labels:
        stepName: '{{ if hasKey . "stepName" }}{{ .stepName }}{{ else }}application{{ end }}'
      #annotations:
      #  argocd-image-updater.argoproj.io/image-list: '{{.images}}'
    spec:
      project: chorus-dev
      sources:
        {{- if hasKey . "chart" }}
        - repoURL: "registry.build.chorus-tre.ch"
          chart: 'charts/{{ trimPrefix "charts/" .chart }}'
          targetRevision: "{{.version}}" # Take version from config.json
          helm:
            valueFiles:
              - $values/{{index .path.segments 0}}/{{.path.basename}}/values.yaml
        {{- end }}
        - repoURL: "https://github.com/CHORUS-TRE/environments.git"
          targetRevision: HEAD
          ref: values
        {{- if hasKey . "source" }}
        - repoURL: '{{ .source.repoURL }}'
          path: '{{ .source.path }}'
          targetRevision: '{{ .source.targetRevision }}'
          helm:
            valueFiles:
            {{- range .source.helm.valueFiles }}
            - '{{ . }}'
            {{- end }}
            {{- if .source.helm.fileParameters }}
            fileParameters:
            {{- range .source.helm.fileParameters }}
            - name: '{{ .name }}'
              path: '{{ .path }}'
            {{- end }}
            {{- end }}
        {{- end }}

      destination:
        name: chorus-dev
        namespace: "{{.namespace}}" # Take namespace from config.json
      syncPolicy:
        automated:
          prune: true # Optionally enable pruning for resources not defined in Git
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - preserveResourcesOnDeletion=true
          - 'ServerSideApply={{ if hasKey . "serverSideApply" }}{{ .serverSideApply }}{{ else }}false{{ end }}'
