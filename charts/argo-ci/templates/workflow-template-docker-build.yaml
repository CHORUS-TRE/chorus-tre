{{- $fullName := include "argo-ci.fullname" . -}}
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ $fullName }}-docker-build-template
  labels:
    {{- include "argo-ci.labels" . | nindent 4 }}
spec:
  arguments:
    artifacts:
      - name: source
    parameters:
      - name: tag
        value: "n/a"
      - name: commitId
        value: ""
      - name: dockerfile
        value: "Dockerfile"
      - name: image
        value: ""
      - name: registry
        value: "registry.build.chorus-tre.ch"
      - name: dockerConfigSecret
        value: ""

  templates:
  - name: docker-build
    inputs:
      parameters:
        - name: tag
        - name: commitId
        - name: dockerfile
        - name: image
        - name: registry
        - name: dockerConfigSecret
      artifacts:
        - name: source
          path: "/src"
    volumes:
      - name: docker-config
        secret:
          secretName: {{`{{inputs.parameters.dockerConfigSecret}}`}}
          items:
            - key: .dockerconfigjson
              path: config.json
    container:
      image: "docker:27"
      volumeMounts:
        - name: docker-config
          mountPath: /.docker
      env:
          # Otherwise buildx uses DOCKER_CONFIG for it, which is read-only.
        - name: BUILDX_CONFIG
          value: /tmp/buildx
        - name: DOCKER_CONFIG
          value: /.docker
        - name: DOCKER_HOST
          value: 127.0.0.1
      command: [sh, -e, -c]
      args:
        - >-
          until docker ps;
            do sleep 3;
          done;

          REVISION="{{`{{inputs.parameters.commitId}}`}}";

          if [ "n/a" != "{{`{{inputs.parameters.tag}}`}}" ]; then
          VERSION="{{`{{inputs.parameters.tag}}`}}";
          else
          VERSION="$(date +%Y%m%d)-${REVISION}";
          fi;

          TAG="{{`{{inputs.parameters.registry}}`}}/{{`inputs.parameters.image`}}:${VERSION}";

          docker buildx build
          --pull
          --file "{{`{{inputs.parameters.dockerfile}}`}}"
          --label "org.opencontainers.image.revision=${REVISION}"
          --tag "${TAG}"
          --output "type=registry"
          .
      workingDir: "/src"
    sidecars:
      - name: dind
        image: "docker:27-dind"
        env:
          - name: DOCKER_TLS_CERTDIR
            value: ""
        securityContext:
          privileged: true
        mirrorVolumeMounts: true
