apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: docker-build-template
spec:
  arguments:
    artifacts:
      - name: source
    parameters:
      - name: tag
        value: "n/a"
      - name: commitId
        value: ""
      - name: dockerfile
        value: "Dockerfile"
      - name: registry
        value: "registry.build.chorus-tre.local"
  volumes:
    - name: docker-config
      secret:
        secretName: {{ .Values.sensor.dockerConfig.secretName | quote }}
        items:
          - key: .dockerconfigjson
            path: config.json
  templates:
  - name: docker-build
    inputs:
      parameters:
        - name: tag
        - name: commitId
        - name: dockerfile
        - name: registry
      artifacts:
        - name: source
          path: "/src"
    container:
      image: docker:27
      volumeMounts:
        - name: docker-config
          mountPath: /.docker
      env:
          # Otherwise buildx uses DOCKER_CONFIG for it, which is read-only.
        - name: BUILDX_CONFIG
          value: /tmp/buildx
        - name: DOCKER_CONFIG
          value: /.docker
        - name: DOCKER_HOST
          value: 127.0.0.1
        - name: REGISTRY
          value: "{{`{{inputs.parameters.registry}}`}}"
      command: [sh, -c]
      args:
        - >-
          until docker ps;
            do sleep 3;
          done;

          if [ "n/a" != "{{`{{inputs.parameters.tag}}`}}" ]; then
          VERSION="{{`{{inputs.parameters.tag}}`}}";
          else
          VERSION="$(date +%Y%m%d)-{{`{{inputs.parameters.commitId}}`}}";
          fi;

          docker buildx build
          --pull
          --file {{`{{inputs.parameters.dockerfile}}`}}
          --tag "${REGISTRY}/workbench-operator:${VERSION}"
          --output "type=registry"
          .
      workingDir: "/src"
    sidecars:
      - name: dind
        image: docker:27-dind
        env:
          - name: DOCKER_TLS_CERTDIR
            value: ""
        securityContext:
          privileged: true
        mirrorVolumeMounts: true
