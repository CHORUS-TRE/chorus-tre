{{- $fullName := include "argo-ci.fullname" . -}}
{{- $serviceAccountName := include "argo-ci.serviceAccountName" . -}}
{{- $githubSecretName := index .Values.githubSecrets "workbench-operator" }}
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: {{ $fullName }}-build-workbench-operator
  labels:
    {{- include "argo-ci.labels" . | nindent 4 }}
spec:
  eventBusName: {{ $fullName }}-default
  template:
    serviceAccountName: {{ $serviceAccountName }}

  dependencies:
    - name: build-workbench-operator
      eventSourceName: {{ $fullName }}-github
      eventName: workbench-operator
      filters:
        data:
          - path: headers.X-Github-Event
            type: string
            value:
              - push
          - path: "body.ref"
            type: string
            value:
              # The goal is to publish tagged releases.
              #- "refs/heads/master"
              - "refs/tags/v*"

    - name: ci-workbench-operator
      eventSourceName: {{ $fullName }}-github
      eventName: workbench-operator
      filters:
        data:
          - path: headers.X-Github-Event
            type: string
            value:
              - pull_request
          - path: "body.action"
            type: string
            value:
              - "opened"
              - "synchronize"

  triggers:
    - template:
        conditions: ci-workbench-operator
        name: github-workflow-trigger-ci-workbench-operator
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: "-"
              spec:
                serviceAccountName: {{ $serviceAccountName }}
                entrypoint: make-test

                arguments:
                  parameters:
                    - name: repoUrl
                    - name: repoFullName
                    - name: ref
                    - name: sha

                hooks:
                  running:
                    expression: workflow.status == "Running"
                    templateRef:
                      name: {{ $fullName }}-github-notify-template
                      template: github-notify
                    arguments:
                      parameters:
                        - name: repoFullName
                          value: "{{`{{workflow.parameters.repoFullName}}`}}"
                        - name: sha
                          value: "{{`{{workflow.parameters.sha}}`}}"
                        - name: githubSecret
                          value: {{ $githubSecretName }}
                  exit:
                    templateRef:
                      name: {{ $fullName }}-github-notify-template
                      template: github-notify
                    arguments:
                      parameters:
                        - name: repoFullName
                          value: "{{`{{workflow.parameters.repoFullName}}`}}"
                        - name: sha
                          value: "{{`{{workflow.parameters.sha}}`}}"
                        - name: githubSecret
                          value: {{ $githubSecretName }}

                templates:
                  - name: make-test
                    steps:
                      - - name: ci
                          template: ci

                  - name: ci
                    inputs:
                      artifacts:
                        - name: git
                          path: "/src"
                          git:
                            repo: "{{`{{workflow.parameters.repoUrl}}`}}"
                            revision: "{{`{{workflow.parameters.sha}}`}}"
                            usernameSecret:
                              name: {{ $githubSecretName }}
                              key: username
                            passwordSecret:
                              name: {{ $githubSecretName }}
                              key: password
                            ref: "{{`{{workflow.parameters.ref}}`}}"
                    container:
                      image: "golang:1.23-bookworm"
                      command: [sh, -e, -c]
                      args:
                        - make test
                      workingDir: "/src"

          parameters:
            - src:
                dependencyName: ci-workbench-operator
                dataKey: body.repository.clone_url
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: ci-workbench-operator
                dataKey: body.repository.full_name
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: ci-workbench-operator
                dataKey: body.pull_request.head.ref
              dest: spec.arguments.parameters.2.value
            - src:
                dependencyName: ci-workbench-operator
                dataKey: body.pull_request.head.sha
              dest: spec.arguments.parameters.3.value
            # Append text and commit id to dynamically assign workflow name.
            - src:
                dependencyName: ci-workbench-operator
                dataTemplate: "ci-workbench-operator-pr{{`{{ .Input.body.pull_request.number }}`}}"
              dest: metadata.generateName
              operation: prepend
            # Generate a nice title and description
            - src:
                dependencyName: ci-workbench-operator
                dataTemplate: "CI {{`{{ .Input.body.repository.full_name }}`}}"
              dest: metadata.annotations.workflows\.argoproj\.io/title
            - src:
                dependencyName: ci-workbench-operator
                dataTemplate: "PR #{{`{{ .Input.body.pull_request.number }}`}} - {{`{{ .Input.body.pull_request.head.ref }}`}}"
              dest: metadata.annotations.workflows\.argoproj\.io/description

    - template:
        conditions: build-workbench-operator
        name: github-workflow-trigger-build-workbench-operator
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: "-"
              spec:
                serviceAccountName: {{ $serviceAccountName }}
                entrypoint: build-workbench-operator
                volumes:
                  - name: docker-config
                    secret:
                      secretName: {{ .Values.sensor.dockerConfig.secretName | quote }}
                      items:
                        - key: .dockerconfigjson
                          path: config.json
                arguments:
                  parameters:
                    - name: repoUrl
                    - name: repoFullName
                    - name: revision
                    - name: ref
                    - name: sha
                    - name: tag

                hooks:
                  running:
                    expression: workflow.status == "Running"
                    templateRef:
                      name: {{ $fullName }}-github-notify-template
                      template: github-notify
                    arguments:
                      parameters:
                        - name: repoFullName
                          value: "{{`{{workflow.parameters.repoFullName}}`}}"
                        - name: sha
                          value: "{{`{{workflow.parameters.sha}}`}}"
                        - name: githubSecret
                          value: {{ $githubSecretName }}
                  exit:
                    templateRef:
                      name: {{ $fullName }}-github-notify-template
                      template: github-notify
                    arguments:
                      parameters:
                        - name: repoFullName
                          value: "{{`{{workflow.parameters.repoFullName}}`}}"
                        - name: sha
                          value: "{{`{{workflow.parameters.sha}}`}}"
                        - name: githubSecret
                          value: {{ $githubSecretName }}

                templates:
                  - name: build-workbench-operator
                    steps:
                      - - name: docker-build
                          templateRef:
                            name: {{ $fullName }}-docker-build-template
                            template: docker-build
                          arguments:
                            parameters:
                              - name: image
                                value: "workbench-operator"
                              - name: tag
                                value: "{{`{{workflow.parameters.tag}}`}}"
                              - name: sha
                                value: "{{`{{workflow.parameters.sha}}`}}"
                              - name: dockerfile
                                value: "Dockerfile"
                              - name: repository
                                value: "chorus"
                              - name: registry
                                value: {{ .Values.sensor.registry | quote }}
                              - name: dockerConfigSecret
                                value: {{ .Values.sensor.dockerConfig.secretName | quote }}
                            artifacts:
                              - name: source
                                git:
                                  repo: "{{`{{workflow.parameters.repoUrl}}`}}"
                                  revision: "{{`{{workflow.parameters.revision}}`}}"
                                  usernameSecret:
                                    name: {{ $githubSecretName }}
                                    key: username
                                  passwordSecret:
                                    name: {{ $githubSecretName }}
                                    key: password
                                  depth: 1
                                  ref: "{{`{{workflow.parameters.ref}}`}}"

                      - - name: helm-publish
                          templateRef:
                            name: {{ $fullName }}-helm-publish-template
                            template: helm-publish
                          arguments:
                            parameters:
                              - name: chartsDir
                                value: "charts"
                              - name: chartName
                                value: "workbench-operator"
                              - name: registry
                                value: {{ .Values.sensor.registry | quote }}
                              - name: dockerConfigSecret
                                value: {{ .Values.sensor.dockerConfig.secretName | quote }}
                            artifacts:
                              - name: source
                                git:
                                  repo: "{{`{{workflow.parameters.repoUrl}}`}}"
                                  revision: "{{`{{workflow.parameters.revision}}`}}"
                                  usernameSecret:
                                    name: {{ $githubSecretName }}
                                    key: username
                                  passwordSecret:
                                    name: {{ $githubSecretName }}
                                    key: password
                                  depth: 1
                                  ref: "{{`{{workflow.parameters.ref}}`}}"

          parameters:
            - src:
                dependencyName: build-workbench-operator
                dataKey: body.repository.clone_url
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: build-workbench-operator
                dataKey: body.repository.full_name
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: build-workbench-operator
                dataKey: body.after
              dest: spec.arguments.parameters.2.value
            - src:
                dependencyName: build-workbench-operator
                dataKey: body.ref
              dest: spec.arguments.parameters.3.value
            - src:
                dependencyName: build-workbench-operator
                dataKey: body.head_commit.id
              dest: spec.arguments.parameters.4.value
            - src:
                dependencyName: build-workbench-operator
                dataTemplate: '{{`{{ if hasPrefix "refs/tags/v" .Input.body.ref }}{{ .Input.body.ref | trimPrefix "refs/tags/v"  }}{{ else }}n/a{{ end }}`}}'
              dest: spec.arguments.parameters.5.value
            # Append text and commit id to dynamically assign workflow name.
            - src:
                dependencyName: build-workbench-operator
                dataTemplate: "build-workbench-operator-{{`{{ .Input.body.head_commit.id | substr 0 7 }}`}}"
              dest: metadata.generateName
              operation: prepend
            # Generate a nice title and description
            - src:
                dependencyName: build-workbench-operator
                dataTemplate: 'Release {{`{{ if hasPrefix "refs/tags/v" .Input.body.ref }}{{ .Input.body.ref | trimPrefix "refs/tags/v"  }}{{ end }}`}}'
              dest: metadata.annotations.workflows\.argoproj\.io/title
            - src:
                dependencyName: build-workbench-operator
                dataTemplate: '{{`{{ .Input.body.repository.full_name }}`}}'
              dest: metadata.annotations.workflows\.argoproj\.io/description

      retryStrategy:
        steps: 3
