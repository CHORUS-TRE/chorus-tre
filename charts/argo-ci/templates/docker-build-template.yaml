{{- $fullName := include "argo-ci.fullname" . -}}
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ $fullName }}-docker-build-template
  labels:
    {{- include "argo-ci.labels" . | nindent 4 }}
spec:
  arguments:
    artifacts:
      - name: source
    parameters:
      - name: tag
        value: "n/a"
      - name: sha
      - name: dockerfile
        value: "Dockerfile"
      - name: image
      - name: repository
      - name: registry
        value: "harbor.build.chorus-tre.local"
      - name: dockerConfigSecret

  templates:
  - name: docker-build
    inputs:
      parameters:
        - name: tag
        - name: sha
        - name: dockerfile
        - name: image
        - name: repository
        - name: registry
        - name: dockerConfigSecret
      artifacts:
        - name: source
          path: "/src"

    volumes:
      - name: docker-config
        secret:
          secretName: "{{`{{inputs.parameters.dockerConfigSecret}}`}}"
          items:
            - key: .dockerconfigjson
              path: config.json

    container:
      image: "docker:27.5.1"
      volumeMounts:
        - name: docker-config
          mountPath: /.docker
      env:
          # Otherwise buildx uses DOCKER_CONFIG for it, which is read-only.
        - name: BUILDX_CONFIG
          value: /tmp/buildx
        - name: DOCKER_CONFIG
          value: /.docker
        - name: DOCKER_HOST
          value: 127.0.0.1
        - name: DOCKERFILE
          value: "{{`{{inputs.parameters.dockerfile}}`}}"
        - name: REPOSITORY
          value: "{{`{{inputs.parameters.repository}}`}}"
        - name: REGISTRY
          value: "{{`{{inputs.parameters.registry}}`}}"
        - name: SHA
          value: "{{`{{inputs.parameters.sha}}`}}"
        - name: IMAGE
          value: "{{`{{inputs.parameters.image}}`}}"
        - name: TAG
          value: "{{`{{inputs.parameters.tag}}`}}"
      command: [sh, -e, -c]
      args:
        - >-
          until docker ps;
            do sleep 3;
          done;

          BUILDER_NAME="docker-container";

          if [ -n "${TAG}" ] && [ "n/a" != "${TAG}" ]; then
            version="${TAG}";
          else
            version="$(date +%Y%m%d)-$(echo -n ${SHA} | cut -c 1-8)";
          fi;

          tag="${REGISTRY}/${REPOSITORY}/${IMAGE}:${version}";
          tag_cache="${REGISTRY}/cache/${IMAGE}-cache";

          CACHE_FROM="\
            --cache-from=type=registry,ref=${tag_cache}:${version} \
            --cache-from=type=registry,ref=${tag_cache}:latest";

          CACHE_TO="\
            --cache-to=type=registry,ref=${tag_cache}:${version},mode=max,image-manifest=true \
            --cache-to=type=registry,ref=${tag_cache}:latest,mode=max,image-manifest=true";

          docker buildx create --name "${BUILDER_NAME}" --driver docker-container;

          docker buildx build
          --pull
          --builder ${BUILDER_NAME}
          --file "${DOCKERFILE}"
          --label "org.opencontainers.image.revision=${SHA}"
          --tag "${tag}"
          ${CACHE_FROM}
          ${CACHE_TO}
          --output "type=registry"
          .
      workingDir: "/src"
    sidecars:
      - name: dind
        image: "docker:27.5.1-dind"
        env:
          - name: DOCKER_TLS_CERTDIR
            value: ""
        securityContext:
          privileged: true
        mirrorVolumeMounts: true
