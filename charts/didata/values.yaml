# Default values for didata.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: didata/didata
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

env:
  url: "https://didata.chorus-tre.local"
  router_base: "/"

secret:
  env_path_source: "/var/didata/env/didata.env"
  env_path_dest: "/var/www/html/.env"

external_db_host: "chorus-didata-db-mariadb"

imagePullSecrets:
  - name: regcred-didata
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

networkPolicy:
  enabled: true
  # Enable L7 Web Application Firewall for advanced HTTP traffic control
  enabled_l7_waf: true
  # Note: When enabled_l7_waf is true, a CiliumNetworkPolicy is created instead of standard K8s NetworkPolicy
  # In this chart, it is mandatory to use due to "apt-get update -q && apt-get install -y -q expect" at runtime
  # See https://github.com/CHORUS-TRE/chorus-tre/blob/master/charts/didata/templates/deployment.yaml#L68-L176
  ingress:
  # # For standard NetworkPolicy
  # - from:
  #   - namespaceSelector:
  #       matchLabels:
  #         kubernetes.io/metadata.name: ingress-nginx
  #     podSelector:
  #       matchLabels:
  #         app.kubernetes.io/name: ingress-nginx
  #         app.kubernetes.io/component: controller
  #   ports:
  #   - protocol: TCP
  #     port: 80
  # For CiliumNetworkPolicy, select pods from ingress-nginx namespace
  - fromEndpoints:
    - matchLabels:
        # Note: 'k8s:' prefix is not used here as per Cilium's label selection
        kubernetes.io/metadata.name: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/component: controller
    toPorts:
    - ports:
      - port: "80"
        protocol: TCP
  egress:
  # Allow egress to MariaDB database
  # - to:
  #   - podSelector:
  #       matchLabels:
  #         app.kubernetes.io/name: mariadb
  #         app.kubernetes.io/component: primary
  #   ports:
  #   - protocol: TCP
  #     port: 3306
  - toEndpoints:
    - matchLabels:
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/component: primary
    toPorts:
    - ports:
      - port: "3306"
        protocol: TCP
  # Allow L7 egress for apt-get to Debian and Microsoft package repositories
  - toFQDNs:
    - matchName: deb.debian.org
    - matchName: packages.microsoft.com
    toPorts:
    - ports:
      - port: "80"
        protocol: TCP
      - port: "443"
        protocol: TCP
      rules:
        http:
        - {}
  # For CiliumNetworkPolicy, egress rules may use additional selectors like:
  # - toEndpoints:  # For pods
  # - toServices:   # For services
  # - toCIDR:       # For IP ranges
  # - toCIDRSet:    # For multiple IP ranges
  # - toFQDNs:      # For DNS names
  # Example:
  # - toEndpoints:
  #   - matchLabels:
  #       app.kubernetes.io/name: redis
  #   toPorts:
  #   - ports:
  #     - port: "6379"
  #       protocol: TCP

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: didata.chorus-tre.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: didata-tls
      hosts:
        - didata.chorus-tre.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#livenessProbe:
#  httpGet:
#    path: /
#    port: http
#readinessProbe:
#  httpGet:
#    path: /
#    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: didata-logs
#      emptyDir: # Not allowed with persistentVolumeClaim
    persistentVolumeClaim:
      claimName: didata-logs-pvc
  - name: didata-user-storage
#      emptyDir: # Not allowed with persistentVolumeClaim
    persistentVolumeClaim:
      claimName: didata-user-storage-pvc
  - name: didata-env
    secret:
      secretName: didata-env
      optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: didata-logs
    mountPath: "/var/www/html/storage/logs"
  - name: didata-user-storage
    mountPath: "/var/www/html/storage/user-storage"
  - name: didata-env
    mountPath: "/var/didata/env"
    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
