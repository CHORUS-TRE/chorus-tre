# Default values for didata.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: harbor.build.chorus-tre.local/services/didata
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

env:
  url: "https://didata.chorus-tre.local"
  router_base: "/"

secret:
  env_path_source: "/var/didata/env/didata.env"
  env_path_dest: "/var/www/html/.env"

imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: didata.chorus-tre.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: didata-tls
      hosts:
        - didata.chorus-tre.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#livenessProbe:
#  httpGet:
#    path: /
#    port: http
#readinessProbe:
#  httpGet:
#    path: /
#    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: didata-logs
    emptyDir:
    persistentVolumeClaim:
    claimName: didata-logs-pvc
  - name: didata-user-storage
    emptyDir:
    persistentVolumeClaim:
    claimName: didata-user-storage-pvc
  - name: didata-env
    secret:
      secretName: didata-env
      optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: didata-logs
    mountPath: "/var/www/html/storage/logs"
  - name: didata-user-storage
    mountPath: "/var/www/html/storage/user-storage"
  - name: didata-env
    mountPath: "/var/didata/env"
    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
