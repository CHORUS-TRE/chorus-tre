postgresql:
  image:
    repository: bitnamilegacy/postgresql

  global:
    postgresql:
      auth:
        username: ""
        password: ""

        existingSecret: "postgresql-secret"

        # The above secret needs to two following keys.
        # It's important that adminPasswordKey matches with the above password.
        #
        # secretKeys:
        #  adminPasswordKey: "postgres-password"
        #  userPasswordKey: "password"

    security:
      allowInsecureImages: true

  tls:
    enabled: false

    # Generate this secret using a cert-manager Certificate resource.
    certificatesSecret: postgresql-general-tls
    certFilename: "tls.crt"
    certKeyFilename: "tls.key"
    # Set this up to enforce the client certificate verification.
    certCAFilename: ""

  volumePermissions:
    # Required by TLS
    enabled: true

    image:
      repository: bitnamilegacy/os-shell

    resourcesPreset: "nano"

  metrics:
    enabled: true

    image:
      repository: bitnamilegacy/postgres-exporter

    resourcesPreset: "micro"

    serviceMonitor:
      enabled: true

  primary:
    # See: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    resourcesPreset: "small"
    persistence:
      size: 1Gi

  readReplicas:
    resourcesPreset: "nano"

certificate:
  enabled: false

  # Same as above.
  secretName: postgresql-general-tls

  duration: 2169h # 90d
  renewBefore: 360h # 15d

  issuerRef:
    name: CHANGEME-issuer
