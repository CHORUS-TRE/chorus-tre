apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: build-images
spec:
  template:
    serviceAccountName: argo-ci-sa
  dependencies:
    - name: build-images
      eventSourceName: github
      eventName: ci
      filters:
        data:
          - path: "[body.commits.#.modified.#()#,body.commits.#.added.#()#,body.commits.#.removed.#()#]"
            type: string
            value:
              - "server/*"
              - "apps/*/.*"
          - path: "body.ref"
            type: string
            value:
              - "refs/heads/master"

  triggers:
    - template:
        name: github-workflow-trigger
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-
              spec:
                serviceAccountName: argo-ci-sa
                entrypoint: build-images
                arguments:
                  parameters:
                    - name: commit_id
                    - name: commit_message
                    - name: added
                    - name: removed
                    - name: modified
                templates:
                  - name: build-images
                    steps:
                      - - name: getpaths
                          template: getpaths
                          arguments:
                            parameters:
                              - name: added
                                value: "{{workflow.parameters.added}}"
                              - name: removed
                                value: "{{workflow.parameters.removed}}"
                              - name: modified
                                value: "{{workflow.parameters.modified}}"

                      - - name: whalesay
                          template: whalesay
                          arguments:
                            parameters:
                              - name: paths
                                value: "{{item}}"
                          withParam: "{{steps.getpaths.outputs.result}}" # The result of the script

                  - name: getpaths
                    inputs:
                      parameters:
                        - name: added
                        - name: removed
                        - name: modified
                    script:
                      image: python:alpine
                      command: [python]
                      source: |
                        from pathlib import Path
                        import json
                        import sys
                        paths = {{inputs.parameters.added}} + {{inputs.parameters.removed}} + {{inputs.parameters.modified}}
                        # Iterate over a copy of the list
                        for p in paths[:]:  # paths[:] creates a shallow copy of the list
                            path = Path(p)
                            if path.parts[0] == 'apps' and len(path.parts) > 2:
                                # Keep only up to the second part after 'apps/'
                                index = paths.index(p)
                                paths[index] = '/'.join(path.parts[:2])
                            elif path.parts[0] == 'server' and len(path.parts) > 1:
                                # Keep only the first part after 'server'
                                index = paths.index(p)
                                paths[index] = '/'.join(path.parts[:1])
                            else:
                                # Remove the path by deleting it if it does not match any conditions
                                paths.remove(p)
                        json.dump(list(set(paths)), sys.stdout)

                  - name: whalesay
                    inputs:
                      parameters:
                        - name: paths
                    container:
                      image: docker/whalesay:latest
                      command: [cowsay]
                      args: ["{{inputs.parameters.paths}}"]

          parameters:
            - src:
                dependencyName: build-images
                dataTemplate: "{{ .Input.body.head_commit.id | substr 0 7 }}"
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: build-images
                dataKey: body.head_commit.message
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: build-images
                dataKey: body.head_commit.added
              dest: spec.arguments.parameters.2.value
            - src:
                dependencyName: build-images
                dataKey: body.head_commit.removed
              dest: spec.arguments.parameters.3.value
            - src:
                dependencyName: build-images
                dataKey: body.head_commit.modified
              dest: spec.arguments.parameters.4.value
            # Append text and commit id to dynamically assign workflow name <2c065a-xxx>
            - src:
                dependencyName: build-images
                dataTemplate: "build-images-{{ .Input.body.head_commit.id | substr 0 7 }}"
              dest: metadata.name
              operation: append
      retryStrategy:
        steps: 3
